using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.Entity;

namespace Tulip
{
    public partial class frmChannelSummary : Form
    {

        private TulipEntities _context;


        public frmChannelSummary()
        {
            InitializeComponent();
        }

        private void frmPointSummary_Load(object sender, EventArgs e)
        {
            _context = new TulipEntities();
            _context.Channels.Load();
            this.channelBindingSource.DataSource = _context.Channels.Local.ToBindingList();
            

        }

        private void channelBindingNavigatorSaveItem_Click(object sender, EventArgs e)
        {
            this.Validate();

            // Currently, the Entity Framework doesn’t mark the entities 
            // that are removed from a navigation property (in our example the Products)
            // as deleted in the context. 
            // The following code uses LINQ to Objects against the Local collection 
            // to find all products and marks any that do not have
            // a Category reference as deleted. 
            // The ToList call is required because otherwise 
            // the collection will be modified 
            // by the Remove call while it is being enumerated. 
            // In most other situations you can do LINQ to Objects directly 
            // against the Local property without using ToList first.
            /*
            foreach (var product in _context.Products.Local.ToList())
            {
                if (product.Category == null)
                {
                    _context.Products.Remove(product);
                }
            }*/

            // Save the changes to the database.
            this._context.SaveChanges();

            // Refresh the controls to show the values         
            // that were generated by the database.
            /*
            this.categoryDataGridView.Refresh();
            this.productsDataGridView.Refresh();
             * */

            this.channelDataGridView.Refresh();
            //this.tblInterfaces.Refresh();
        }

        private void frmChannelSummary_FormClosing(object sender, FormClosingEventArgs e)
        {
            _context.Dispose();
        }
    }
}
